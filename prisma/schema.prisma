generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int        @id @default(autoincrement())
  nome      String
  email     String     @unique
  senha     String
  foto      String?
  admin     Boolean    @default(false)
  favoritos Favorita[]
}

model Estabelecimento {
  id            Int                        @id @default(autoincrement())
  nome          String
  descricao     String
  endereco      String
  latitude      Float
  longitude     Float
  whatsapp      String?
  facebook      String?
  instagram     String?
  fotoPerfil    String?
  fotos         Foto[]
  categorias    CategoriaEstabelecimento[]
  telefones     Telefone[]
  emails        Email[]
  tags          TagEstabelecimento[]
  horario       Horario?
  favoritadoPor Favorita[]
}

model Foto {
  id                Int             @id @default(autoincrement())
  url               String
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  estabelecimentoId Int
}

model Telefone {
  id                Int             @id @default(autoincrement())
  numero            String
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  estabelecimentoId Int
}

model Email {
  id                Int             @id @default(autoincrement())
  email             String
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  estabelecimentoId Int
}

model Categoria {
  id               Int                        @id @default(autoincrement())
  nome             String
  imagem           String?
  estabelecimentos CategoriaEstabelecimento[]
  tags             CategoriaTag[]
}

model Tag {
  id               Int                  @id @default(autoincrement())
  nome             String
  estabelecimentos TagEstabelecimento[]
  categorias       CategoriaTag[]
}

model CategoriaEstabelecimento {
  estabelecimentoId Int
  categoriaId       Int
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  categoria         Categoria       @relation(fields: [categoriaId], references: [id])

  @@id([estabelecimentoId, categoriaId])
}

model TagEstabelecimento {
  estabelecimentoId Int
  tagId             Int
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  tag               Tag             @relation(fields: [tagId], references: [id])

  @@id([estabelecimentoId, tagId])
}

model CategoriaTag {
  categoriaId Int
  tagId       Int

  categoria Categoria @relation(fields: [categoriaId], references: [id])
  tag       Tag       @relation(fields: [tagId], references: [id])

  @@id([categoriaId, tagId])
}

model Horario {
  id                Int             @id @default(autoincrement())
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  estabelecimentoId Int             @unique

  dom String?
  seg String?
  ter String?
  qua String?
  qui String?
  sex String?
  sab String?
}

model Favorita {
  usuarioId         Int
  estabelecimentoId Int

  usuario         Usuario         @relation(fields: [usuarioId], references: [id])
  estabelecimento Estabelecimento @relation(fields: [estabelecimentoId], references: [id])

  @@id([usuarioId, estabelecimentoId])
}
